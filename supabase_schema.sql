-- Create the table for public complaints
CREATE TABLE complaints (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_at TIMESTAMPTZ DEFAULT NOW() NOT NULL,
    issue TEXT NOT NULL,
    location_description TEXT,
    latitude REAL,
    longitude REAL,
    image_url TEXT,
    status TEXT DEFAULT 'New'::text NOT NULL
);

-- Enable Row-Level Security (RLS) for the complaints table
ALTER TABLE public.complaints ENABLE ROW LEVEL SECURITY;

-- Allow public (anonymous) users to insert new complaints
CREATE POLICY "Allow anonymous inserts" ON public.complaints FOR INSERT WITH CHECK (true);

-- Allow all users (including employees) to view all complaints
CREATE POLICY "Allow all read access" ON public.complaints FOR SELECT USING (true);

-- Allow authenticated users (employees) to update complaints (e.g., change status)
CREATE POLICY "Allow employees to update" ON public.complaints FOR UPDATE
USING (auth.role() = 'authenticated') WITH CHECK (auth.role() = 'authenticated');

-- Create a bucket for complaint images with public read access
-- The policy allows anyone to view images, which is suitable for this app.
INSERT INTO storage.buckets (id, name, public)
VALUES ('complaint_images', 'complaint_images', TRUE)
ON CONFLICT (id) DO NOTHING;

CREATE POLICY "Allow public read access to complaint images"
ON storage.objects FOR SELECT
USING ( bucket_id = 'complaint_images' );

-- Allow anonymous users to upload images to the 'complaint_images' bucket
CREATE POLICY "Allow anonymous uploads to complaint images"
ON storage.objects FOR INSERT
WITH CHECK ( bucket_id = 'complaint_images' );
